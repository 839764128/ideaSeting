<application>
  <component name="ProjectManager">
    <defaultProject>
      <component name="CheckStyle-IDEA">
        <option name="configuration">
          <map>
            <entry key="checkstyle-version" value="8.14" />
            <entry key="copy-libs" value="true" />
            <entry key="location-0" value="BUNDLED:(bundled):Sun Checks" />
            <entry key="location-1" value="BUNDLED:(bundled):Google Checks" />
            <entry key="location-2" value="HTTP_URL:http://codecheck.corecd.inhuawei.com/Checkstyle/checkstyle_ruleset_minimal.xml:HWStyle" />
            <entry key="scan-before-checkin" value="false" />
            <entry key="scanscope" value="JavaOnly" />
            <entry key="suppress-errors" value="false" />
          </map>
        </option>
      </component>
      <component name="CheckStyle-IDEA-workspace">
        <option name="configuration">
          <map>
            <entry key="last-active-plugin-version" value="5.22.0" />
          </map>
        </option>
      </component>
      <component name="CopyrightManager" default="HW" />
      <component name="Encoding" defaultCharsetForPropertiesFiles="UTF-8">
        <file url="PROJECT" charset="UTF-8" />
      </component>
      <component name="InspectionProjectProfileManager">
        <profile version="1.0">
          <option name="myName" value="Project Default" />
        </profile>
        <version value="1.0" />
      </component>
      <component name="JavaDocConfiguration">
        <GENERAL>
          <MODE>UPDATE</MODE>
          <OVERRIDDEN_METHODS>false</OVERRIDDEN_METHODS>
          <SPLITTED_CLASS_NAME>true</SPLITTED_CLASS_NAME>
          <LEVELS>
            <LEVEL>TYPE</LEVEL>
            <LEVEL>METHOD</LEVEL>
            <LEVEL>FIELD</LEVEL>
          </LEVELS>
          <VISIBILITIES>
            <VISIBILITY>PROTECTED</VISIBILITY>
            <VISIBILITY>DEFAULT</VISIBILITY>
            <VISIBILITY>PUBLIC</VISIBILITY>
          </VISIBILITIES>
        </GENERAL>
        <TEMPLATES>
          <CLASSES>
            <CLASS>
              <KEY>^.*(public|protected|private)*.+interface\s+\w+.*</KEY>
              <VALUE>/**\n
 * The interface ${name}.\n
&lt;#if element.typeParameters?has_content&gt;        * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
        * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
 */</VALUE>
            </CLASS>
            <CLASS>
              <KEY>^.*(public|protected|private)*.+enum\s+\w+.*</KEY>
              <VALUE>/**\n
 * The enum ${name}.\n
 */</VALUE>
            </CLASS>
            <CLASS>
              <KEY>^.*(public|protected|private)*.+class\s+\w+.*</KEY>
              <VALUE>/**\n
 * The type ${name}.\n
&lt;#if element.typeParameters?has_content&gt;        * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
        * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
 */</VALUE>
            </CLASS>
            <CLASS>
              <KEY>.+</KEY>
              <VALUE>/**\n
 * The type ${name}.\n
 */</VALUE>
            </CLASS>
          </CLASSES>
          <CONSTRUCTORS>
            <CONSTRUCTOR>
              <KEY>.+</KEY>
              <VALUE>/**\n
 * Instantiates a new ${name}.\n
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
            </CONSTRUCTOR>
          </CONSTRUCTORS>
          <METHODS>
            <METHOD>
              <KEY>^.*(public|protected|private)*\s*.*(\w(\s*&lt;.+&gt;)*)+\s+get\w+\s*\(.*\).+</KEY>
              <VALUE>/**\n
 * Gets ${partName}.\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if isNotVoid&gt;
         *\n
         * @return the ${partName}\n
&lt;/#if&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
            </METHOD>
            <METHOD>
              <KEY>^.*(public|protected|private)*\s*.*(void|\w(\s*&lt;.+&gt;)*)+\s+set\w+\s*\(.*\).+</KEY>
              <VALUE>/**\n
 * Sets ${partName}.\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if isNotVoid&gt;
         *\n
         * @return the ${partName}\n
&lt;/#if&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
            </METHOD>
            <METHOD>
              <KEY>^.*((public\s+static)|(static\s+public))\s+void\s+main\s*\(\s*String\s*(\[\s*\]|\.\.\.)\s+\w+\s*\).+</KEY>
              <VALUE>/**\n
 * The entry point of application.\n

     &lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
     * @param ${element.parameterList.parameters[0].name} the input arguments\n
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
            </METHOD>
            <METHOD>
              <KEY>.+</KEY>
              <VALUE>/**\n
 * ${name}&lt;#if isNotVoid&gt; ${return}&lt;/#if&gt;.\n
&lt;#if element.typeParameters?has_content&gt;         * \n
&lt;/#if&gt;
&lt;#list element.typeParameters as typeParameter&gt;
         * @param &lt;${typeParameter.name}&gt; the type parameter\n
&lt;/#list&gt;
&lt;#if element.parameterList.parameters?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.parameterList.parameters as parameter&gt;
         * @param ${parameter.name} the ${paramNames[parameter.name]}\n
&lt;/#list&gt;
&lt;#if isNotVoid&gt;
         *\n
         * @return the ${return}\n
&lt;/#if&gt;
&lt;#if element.throwsList.referenceElements?has_content&gt;
         *\n
&lt;/#if&gt;
&lt;#list element.throwsList.referenceElements as exception&gt;
         * @throws ${exception.referenceName} the ${exceptionNames[exception.referenceName]}\n
&lt;/#list&gt;
 */</VALUE>
            </METHOD>
          </METHODS>
          <FIELDS>
            <FIELD>
              <KEY>^.*(public|protected|private)*.+static.*(\w\s\w)+.+</KEY>
              <VALUE>/**\n
 * The constant ${element.getName()}.\n
 */</VALUE>
            </FIELD>
            <FIELD>
              <KEY>^.*(public|protected|private)*.*(\w\s\w)+.+</KEY>
              <VALUE>/**\n
    &lt;#if element.parent.isInterface()&gt;
        * The constant ${element.getName()}.\n
&lt;#else&gt;
        * The ${name}.\n
&lt;/#if&gt; */</VALUE>
            </FIELD>
            <FIELD>
              <KEY>.+</KEY>
              <VALUE>/**\n
    &lt;#if element.parent.isEnum()&gt;
        *${name} ${typeName}.\n
&lt;#else&gt;
        * The ${name}.\n
&lt;/#if&gt;*/</VALUE>
            </FIELD>
          </FIELDS>
        </TEMPLATES>
      </component>
      <component name="MavenImportPreferences">
        <option name="generalSettings">
          <MavenGeneralSettings>
            <option name="mavenHome" value="D:/apache-maven-3.3.9-bin" />
            <option name="userSettingsFile" value="D:\apache-maven-3.3.9-bin\conf\settings.xml" />
          </MavenGeneralSettings>
        </option>
      </component>
      <component name="ProjectInspectionProfilesVisibleTreeState">
        <entry key="Project Default">
          <profile-state>
            <expanded-state>
              <State>
                <id />
              </State>
              <State>
                <id>Abstraction issuesJava</id>
              </State>
              <State>
                <id>Assignment issuesGroovy</id>
              </State>
              <State>
                <id>Assignment issuesJava</id>
              </State>
              <State>
                <id>Class structureJava</id>
              </State>
              <State>
                <id>Cloning issuesJava</id>
              </State>
              <State>
                <id>Groovy</id>
              </State>
              <State>
                <id>Internationalization issuesJava</id>
              </State>
              <State>
                <id>JUnit issuesJava</id>
              </State>
              <State>
                <id>Java</id>
              </State>
              <State>
                <id>Kotlin</id>
              </State>
              <State>
                <id>Logging issuesJava</id>
              </State>
              <State>
                <id>Maven</id>
              </State>
              <State>
                <id>Naming conventionsJava</id>
              </State>
              <State>
                <id>Packaging issuesJava</id>
              </State>
              <State>
                <id>Potentially confusing code constructsGroovy</id>
              </State>
              <State>
                <id>Probable bugsJava</id>
              </State>
              <State>
                <id>TestNGJava</id>
              </State>
              <State>
                <id>Threading issuesGroovy</id>
              </State>
              <State>
                <id>Threading issuesJava</id>
              </State>
            </expanded-state>
          </profile-state>
        </entry>
      </component>
      <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK" />
      <component name="ProjectViewState">
        <option name="hideEmptyMiddlePackages" value="true" />
        <option name="showExcludedFiles" value="true" />
        <option name="showLibraryContents" value="true" />
      </component>
      <component name="PropertiesComponent">
        <property name="last_opened_file_path" value="D:/IdeaProject/CSPPMSMgr/.idea/copyright/HW.xml" />
        <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
        <property name="nodejs_npm_path_reset_for_default_project" value="true" />
        <property name="project.structure.last.edited" value="Problems" />
        <property name="project.structure.proportion" value="0.15" />
        <property name="project.structure.side.proportion" value="0.2" />
        <property name="settings.editor.selected.configurable" value="preferences.sourceCode" />
      </component>
      <component name="RunManager">
        <configuration default="true" type="Applet" factoryName="Applet">
          <option name="WIDTH" value="400" />
          <option name="HEIGHT" value="300" />
          <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
          <module />
          <method />
        </configuration>
        <configuration default="true" type="Application" factoryName="Application">
          <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
          <option name="MAIN_CLASS_NAME" />
          <option name="VM_PARAMETERS" />
          <option name="PROGRAM_PARAMETERS" />
          <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
          <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
          <option name="ALTERNATIVE_JRE_PATH" />
          <option name="ENABLE_SWING_INSPECTOR" value="false" />
          <option name="ENV_VARIABLES" />
          <option name="PASS_PARENT_ENVS" value="true" />
          <module name="" />
          <envs />
          <method />
        </configuration>
        <configuration default="true" type="JUnit" factoryName="JUnit">
          <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
          <module name="" />
          <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
          <option name="ALTERNATIVE_JRE_PATH" />
          <option name="PACKAGE_NAME" />
          <option name="MAIN_CLASS_NAME" />
          <option name="METHOD_NAME" />
          <option name="TEST_OBJECT" value="class" />
          <option name="VM_PARAMETERS" value="-ea" />
          <option name="PARAMETERS" />
          <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
          <option name="ENV_VARIABLES" />
          <option name="PASS_PARENT_ENVS" value="true" />
          <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule" />
          </option>
          <envs />
          <patterns />
          <method />
        </configuration>
        <configuration default="true" type="Remote" factoryName="Remote">
          <option name="USE_SOCKET_TRANSPORT" value="true" />
          <option name="SERVER_MODE" value="false" />
          <option name="SHMEM_ADDRESS" value="javadebug" />
          <option name="HOST" value="localhost" />
          <option name="PORT" value="5005" />
          <method />
        </configuration>
        <configuration default="true" type="TestNG" factoryName="TestNG">
          <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
          <module name="" />
          <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
          <option name="ALTERNATIVE_JRE_PATH" />
          <option name="SUITE_NAME" />
          <option name="PACKAGE_NAME" />
          <option name="MAIN_CLASS_NAME" />
          <option name="METHOD_NAME" />
          <option name="GROUP_NAME" />
          <option name="TEST_OBJECT" value="CLASS" />
          <option name="VM_PARAMETERS" value="-ea" />
          <option name="PARAMETERS" />
          <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
          <option name="OUTPUT_DIRECTORY" />
          <option name="ANNOTATION_TYPE" />
          <option name="ENV_VARIABLES" />
          <option name="PASS_PARENT_ENVS" value="true" />
          <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule" />
          </option>
          <option name="USE_DEFAULT_REPORTERS" value="false" />
          <option name="PROPERTIES_FILE" />
          <envs />
          <properties />
          <listeners />
          <method />
        </configuration>
        <configuration name="&lt;template&gt;" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" default="true" selected="false">
          <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
        </configuration>
      </component>
      <component name="SaveActionSettings">
        <option name="actions">
          <set>
            <option value="activate" />
            <option value="organizeImports" />
            <option value="reformatChangedCode" />
            <option value="missingOverrideAnnotation" />
            <option value="useBlocks" />
            <option value="generateSerialVersionUID" />
            <option value="unnecessaryThis" />
            <option value="finalPrivateMethod" />
            <option value="suppressAnnotation" />
          </set>
        </option>
        <option name="configurationPath" value="" />
      </component>
      <component name="SvnConfiguration">
        <configuration />
      </component>
      <component name="VcsContentAnnotationSettings">
        <option name="myLimit" value="2678400000" />
      </component>
      <component name="masterDetails">
        <states>
          <state key="Copyright.UI">
            <settings>
              <last-edited>HW</last-edited>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="GlobalLibrariesConfigurable.UI">
            <settings>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="JdkListConfigurable.UI">
            <settings>
              <last-edited>1.8</last-edited>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="ProjectJDKs.UI">
            <settings>
              <last-edited>1.8</last-edited>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
          <state key="ProjectLibrariesConfigurable.UI">
            <settings>
              <splitter-proportions>
                <option name="proportions">
                  <list>
                    <option value="0.2" />
                  </list>
                </option>
              </splitter-proportions>
            </settings>
          </state>
        </states>
      </component>
    </defaultProject>
  </component>
</application>